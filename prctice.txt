- name: To set up internet gateway
   hosts: all
   tasks:
     - name: Create VPC and Subnet
       ec2_vpc:
         state: present
         region: ap-northeast-1
         cidr_block: 20.0.0.0/16
         subnets:
           - cidr: 20.0.0.0/16
             resource_tags: {"Name":"Test Subnet"}
         route_tables:
           - subnets:
             - 20.0.0.0/16
             routes:
               - dest: 0.0.0.0/0
                 gw: igw
         wait: yes
         internet_gateway: yes
         resource_tags:
           Name: "Test VPC"
       register: vpc

     - name: get igw
        ec2_vpc_igw:
          vpc_id: "{{ vpc.vpc_id }}"
          region: ap-northeast-1
          state: present
        register: igw

      - name: Tagging the new internet gateway created
        ec2_tag:
          resource: "{{ igw.gateway_id }}"
          state: present
          region: ap-northeast-1
          tags:
            Name: test-gateway


2558521

- name: Create security group
  ec2_group:
    name: "{{ project_name }}_security_group"
    description: "{{ project_name }} security group"
    region: "{{ region }}"
    rules:
      - proto: tcp  # ssh
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp  # http
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp  # https
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  register: test_firewall

- name: Create an EC2 key
  ec2_key:
    name: "{{ project_name }}-{{ env }}-key"
    region: "{{ region }}"
  register: ec2_key

- name: Save private key
  copy: content="{{ ec2_key.key.private_key }}" dest="../aws-private.pem" mode=0600
  when: ec2_key.changed

- name: Create an EC2 instance
  ec2:
    key_name: "{{ project_name }}-{{ env }}-key"
    region: "{{ region }}"
    group_id: "{{ test_firewall.group_id }}"
    instance_type: "{{ instance_type }}"
    image: "{{ ami }}"
    wait: yes
    instance_tags:
        env: "{{ env }}"
    count_tag: env
    exact_count: 1
    vpc_subnet_id: subnet-66d25311
    assign_public_ip: yes
  register: ec2
- name: Add the newly created EC2 instance(s) to host group
  lineinfile: dest={{ hostpath }}
              regexp={{ item.public_ip }} 
              insertafter="[webserver]" 
              line="{{ item.public_ip }} {{hoststring}}"
              state=present
  with_items: ec2.instances

- wait_for: path={{ hostpath }} search_regex={{hoststring}}

- name: Wait for SSH to come up
  local_action: wait_for 
                host={{ item.public_ip }} 
                port=22 
                state=started
  with_items: ec2.instances



ECR: $ aws ecr get-login --no-include-email : login command


Nageswara_Rao
Newmahesh@4

lost pem file- 2nd process

1. lsblk
2. mkdir -p /var/recovery-disk
3. redhat- mount -o nouuid /dev/xvdf2 /var/recovery-disk 
4. ubuntu - mount /dev/xvdf2 /var/recovery-disk
5. copy authurized_keys to /var/recovery-disk
6. umount /var/recovery-disk
7. while attaching the volume give /dev/sda1




